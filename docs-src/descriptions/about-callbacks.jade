h2#callbacks About callbacks

p.
  In Kefir wherever you pass functions as arguments, you can as well pass
  an array containing <b>this context</b> and <b>additional arguments</b>
  with which function will be called.

p.
  It works everywhere in Kefir where function passes as argument,
  for example in <tt>.map(fn)</tt>, <tt>.filter(fn)</tt>,
  <tt>.fromPoll(wait, fn)</tt> â€” everywhere.

p.
  All following code snippets are equivalent.

pre
  :escapehtml
    someStream.onValue(function(x) {
      someObj.someMethod(1, 2, x);
    });

pre(title="equivalent to above")
  :escapehtml
    someStream.onValue([someObj.someMethod, someObj, 1, 2]);

pre(title="equivalent to above")
  :escapehtml
    someStream.onValue(['someMethod', someObj, 1, 2]);

pre(title="also equivalent but slower and consumes more memory than all above").
  &nbsp;
  someStream.onValue(someObj.someMethod.bind(someObj, 1, 2));

p.
  You can pass method name as a string instead
  of method itself in first position of array.
  Here some real world example where it can be useful:

pre
  :escapehtml
    isVisibleProperty.onValue(function(x) {
      $('.foo').toggleClass('is-visible', x);
    });

pre(title="equivalent to above")
  :escapehtml
    isVisibleProperty.onValue(['toggleClass', $('.foo'), 'is-visible']);

p.
  If you don't need aditional arguments, but only <tt>this</tt> context,
  just don't add them to array: <tt>[foo.bar, foo]</tt>.
  And if you don't need context, pass <tt>null</tt>
  in its place: <tt>[foo, null, 1, 2, 3]</tt>.

p.
  <img data-emoji="point_up"> In order to unsubscribe from observable,
  you must call <tt>.offValue(fn)</tt> or <tt>.offEnd(fn)</tt>
  with exact same array with which you called
  <tt>.onValue(fn)</tt> or <tt>.onEnd(fn)</tt>.

pre(title="unsubscribe example")
  :escapehtml
    someStream.onValue(['someMethod', someObj, 1, 2]);
    someStream.offValue(['someMethod', someObj, 1, 2]);
