h2#convert Convert observables


+descr-method('to-property', 'toProperty', 'stream.toProperty([current])').
  Converts a stream to a property.
  Accepts optional <b>current</b> argument, which becomes current value of the
  property.

pre(title='code').
  var emitter = Kefir.emitter();
  var property = emitter.toProperty(0);
  property.log();
  emitter.emit(1);
  emitter.emit(2);
  emitter.end();

pre(title='console output')
  :escapehtml
    => [emitter.toProperty] <value:current> 0
    => [emitter.toProperty] <value> 1
    => [emitter.toProperty] <value> 2
    => [emitter.toProperty] <end>
div



+descr-method('changes', 'changes', 'property.changes()').
  Converts a property to a stream.
  If property has current value, it will be ignored
  (stream's subscribers won't get it).

pre(title='code').
  var emitter = Kefir.emitter();
  var property = emitter.toProperty(0);
  var changesStream = property.changes();
  changesStream.log();
  emitter.emit(1);
  emitter.emit(2);
  emitter.end();

pre(title='console output')
  :escapehtml
    => [emitter.toProperty.changes] <value> 1
    => [emitter.toProperty.changes] <value> 2
    => [emitter.toProperty.changes] <end>
div
