h2#about-errors Errors

p.
  Kefir supports an additional channel to pass data through observables â€” errors.
  Unlike values, errors normally just flow through the observable chain
  without any transformation. Consider this example:

pre(title='example')
  :escapehtml
    var foo = Kefir.stream(function(emitter) {
      emitter.emit(0);
      emitter.emit(2);
      emitter.error(-1);
      emitter.emit(3);
      emitter.end();
    });

    function add2(x) {
      return x + 2;
    }

    function gt3(x) {
      return x > 3;
    }

    var bar = foo.map(add2).filter(gt3);
    bar.log();


pre(title='console output')
  :escapehtml
    > [stream.map.filter] <value> 4
    > [stream.map.filter] <error> -1
    > [stream.map.filter] <value> 5
    > [stream.map.filter] <end>

pre(title='events in time')
  :escapehtml
    foo: ---0---2---e---3---X
                    -1

    bar: -------4---e---5---X
                    -1
div

p.
  As you can see values are being mapped and filtered,
  but errors just flow unchanged.
  Also notice that observable doesn't end on an error by default,
  but you can use the #[a(href='#end-on-error') endOnError] method to make it happen.
