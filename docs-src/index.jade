include includes/mixins

doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title Kefir.js — Bacon.js / RxJS inspired FRP library for JavaScript with focus on high performance and low memory usage
    meta(name='description', content='Kefir.js — Bacon.js / RxJS inspired FRP library with focus on high performance and low memory usage')
    meta(name='viewport', content='width=1000')
    style(type='text/css')
      include:uglify-css includes/stylesheet.css
  body

    .sidebar
      include includes/side-menu

    .container
      include descriptions/intro
      include descriptions/create
      include descriptions/jquery
      include descriptions/convert
      include descriptions/main-methods
      include descriptions/one-source
      include descriptions/multiple-sources
      include descriptions/active-state
      include descriptions/about-callbacks
      include descriptions/emitter-object

    .help-note
      strong Spot a typo / grammar error, or know how to improve this docs?
      | Please <a href="https://github.com/pozadi/kefir/issues/new">file an issue</a>,
      | or send a pull request.

    script(src='bower-packages/jquery/jquery.js')
    script(src='dist/kefir.min.js')
    script(src='dist/addons/kefir-jquery.min.js')

    script.
      $.getJSON('https://api.github.com/emojis', function(emojis){
        $('[data-emoji]').each(function(){
          var name = $(this).data('emoji');
          $(this).attr({
            src: emojis[name],
            title: ':' + name + ':',
            alt: ':' + name + ':'
          });
        });
      });

    | <!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter26158662 = new Ya.Metrika({id:26158662}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="//mc.yandex.ru/watch/26158662" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter -->
